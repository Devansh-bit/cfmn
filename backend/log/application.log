2025-08-19T16:41:01.284725Z DEBUG sqlx::query: summary="SELECT current_database()" db.statement="" rows_affected=1 rows_returned=1 elapsed=1.385446ms elapsed_secs=0.001385446
2025-08-19T16:41:01.285741Z DEBUG sqlx::query: summary="SELECT pg_advisory_lock($1)" db.statement="" rows_affected=1 rows_returned=1 elapsed=804.264µs elapsed_secs=0.000804264
2025-08-19T16:41:01.286431Z  INFO sqlx::postgres::notice: relation "_sqlx_migrations" already exists, skipping
2025-08-19T16:41:01.286538Z DEBUG sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMPTZ NOT NULL DEFAULT now(),\n    success BOOLEAN NOT NULL,\n    checksum BYTEA NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=687.243µs elapsed_secs=0.000687243
2025-08-19T16:41:01.290047Z DEBUG sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=3.385763ms elapsed_secs=0.003385763
2025-08-19T16:41:01.291489Z DEBUG sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=1 rows_returned=1 elapsed=1.270819ms elapsed_secs=0.001270819
2025-08-19T16:41:01.292219Z DEBUG sqlx::query: summary="SELECT current_database()" db.statement="" rows_affected=1 rows_returned=1 elapsed=492.255µs elapsed_secs=0.000492255
2025-08-19T16:41:01.293257Z DEBUG sqlx::query: summary="SELECT pg_advisory_unlock($1)" db.statement="" rows_affected=1 rows_returned=1 elapsed=864.482µs elapsed_secs=0.000864482
2025-08-19T16:41:01.293439Z  INFO backend: Database connection established.
2025-08-19T16:41:01.295699Z  INFO backend: Server listening on 0.0.0.0:8085
2025-08-19T16:41:08.127597Z TRACE axum::serve: connection 127.0.0.1:35118 accepted
2025-08-19T16:41:08.353581Z DEBUG backend::api::middleware: No Authorization header found in optional middleware
2025-08-19T16:41:08.365686Z DEBUG sqlx::query: summary="SELECT n.id as \"note_id!\", …" db.statement="\n\n\n        SELECT\n            n.id as \"note_id!\",\n            n.course_name as \"note_course_name!\",\n            n.course_code as \"note_course_code!\",\n            n.description as \"note_description\",\n            n.professor_names as \"note_professor_names\",\n            n.tags as \"note_tags!\",\n            n.is_public as \"note_is_public!\",\n            n.has_preview_image as \"note_has_preview_image!\",\n            n.uploader_user_id as \"note_uploader_user_id!\",\n            n.created_at as \"note_created_at!\",\n            n.downloads as \"note_downloads!\",\n            COALESCE(upvote_counts.count, 0) as \"note_upvote_count!\",\n            COALESCE(downvote_counts.count, 0) as \"note_downvote_count!\",\n            user_vote.is_upvote as \"note_user_upvote?\",\n            u.id as \"user_id!\",\n            u.google_id as \"user_google_id!\",\n            u.email as \"user_email!\",\n            u.full_name as \"user_full_name!\",\n            u.reputation as \"user_reputation!\",\n            u.created_at as \"user_created_at!\"\n        FROM\n            notes n\n        JOIN\n            users u ON n.uploader_user_id = u.id\n        LEFT JOIN\n            (SELECT note_id, COUNT(*) as count\n             FROM votes\n             WHERE is_upvote = true\n             GROUP BY note_id) upvote_counts ON n.id = upvote_counts.note_id\n        LEFT JOIN\n            (SELECT note_id, COUNT(*) as count\n             FROM votes\n             WHERE is_upvote = false\n             GROUP BY note_id) downvote_counts ON n.id = downvote_counts.note_id\n        LEFT JOIN\n            votes user_vote ON n.id = user_vote.note_id AND user_vote.user_id = $2\n        ORDER BY\n            n.created_at DESC\n        LIMIT $1\n        \n" rows_affected=6 rows_returned=6 elapsed=11.187364ms elapsed_secs=0.011187364
2025-08-19T16:41:14.543935Z DEBUG sqlx::query: summary="SELECT current_database()" db.statement="" rows_affected=1 rows_returned=1 elapsed=1.683969ms elapsed_secs=0.001683969
2025-08-19T16:41:14.545445Z DEBUG sqlx::query: summary="SELECT pg_advisory_lock($1)" db.statement="" rows_affected=1 rows_returned=1 elapsed=1.275372ms elapsed_secs=0.001275372
2025-08-19T16:41:14.546266Z  INFO sqlx::postgres::notice: relation "_sqlx_migrations" already exists, skipping
2025-08-19T16:41:14.546366Z DEBUG sqlx::query: summary="CREATE TABLE IF NOT …" db.statement="\n\n\nCREATE TABLE IF NOT EXISTS _sqlx_migrations (\n    version BIGINT PRIMARY KEY,\n    description TEXT NOT NULL,\n    installed_on TIMESTAMPTZ NOT NULL DEFAULT now(),\n    success BOOLEAN NOT NULL,\n    checksum BYTEA NOT NULL,\n    execution_time BIGINT NOT NULL\n);\n                \n" rows_affected=0 rows_returned=0 elapsed=775.284µs elapsed_secs=0.000775284
2025-08-19T16:41:14.550794Z DEBUG sqlx::query: summary="SELECT version FROM _sqlx_migrations …" db.statement="\n\nSELECT version FROM _sqlx_migrations WHERE success = false ORDER BY version LIMIT 1\n" rows_affected=0 rows_returned=0 elapsed=4.256484ms elapsed_secs=0.004256484
2025-08-19T16:41:14.552127Z DEBUG sqlx::query: summary="SELECT version, checksum FROM …" db.statement="\n\nSELECT version, checksum FROM _sqlx_migrations ORDER BY version\n" rows_affected=1 rows_returned=1 elapsed=1.180789ms elapsed_secs=0.001180789
2025-08-19T16:41:14.552824Z DEBUG sqlx::query: summary="SELECT current_database()" db.statement="" rows_affected=1 rows_returned=1 elapsed=471.445µs elapsed_secs=0.000471445
2025-08-19T16:41:14.554037Z DEBUG sqlx::query: summary="SELECT pg_advisory_unlock($1)" db.statement="" rows_affected=1 rows_returned=1 elapsed=1.043085ms elapsed_secs=0.001043085
2025-08-19T16:41:14.554233Z  INFO backend: Database connection established.
2025-08-19T16:41:14.556858Z  INFO backend: Server listening on 0.0.0.0:8085
2025-08-19T16:41:16.025851Z TRACE axum::serve: connection 127.0.0.1:58796 accepted
